from telegram import InlineKeyboardButton, InlineKeyboardMarkup

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é
button1 = InlineKeyboardButton("üìã –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –∫ –≤—Ä–∞—á—É", callback_data='book_appointment')
button2 = InlineKeyboardButton("‚ù§ –°–∏–º–ø—Ç–æ–º—ã", callback_data='symptoms')
button3 = InlineKeyboardButton("‚ùî –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å", callback_data='ask_question')
button4 = InlineKeyboardButton("‚Ñπ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è", callback_data='handle_message')
button5 = InlineKeyboardButton("‚òé –û–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É", callback_data='support')
button6 = InlineKeyboardButton("üìç –ü–æ–º–æ—â—å", callback_data='help')

import telegram
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters

# –°–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∫–Ω–æ–ø–∫–∏ "Book Appointment"
def book_appointment(update, context):
    chat_id = update.message.chat_id
    message = "–î–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞ –ø—Ä–∏–µ–º –∫ –≤—Ä–∞—á—É –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ: https://www.gosuslugi.ru/10091/1/form"

    context.bot.send_message(chat_id=chat_id, text=message)

# –°–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∫–Ω–æ–ø–∫–∏ "Symptoms"
def symptoms(update, context):
    chat_id = update.message.chat_id
    message = "–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–∏ —Å–∏–º–ø—Ç–æ–º—ã —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≥–æ–ª–æ–≤–Ω–∞—è –±–æ–ª—å, –Ω–∞—Å–º–æ—Ä–∫):"

    context.bot.send_message(chat_id=chat_id, text=message)

    # –°–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    def handle_symptoms(update, context):
        chat_id = update.message.chat_id
        symptoms = update.message.text

        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É pymorphy2 –¥–ª—è –ª–µ–º–º–∞—Ç–∏–∑–∞—Ü–∏–∏ —Å–ª–æ–≤
        import pymorphy2
        morph = pymorphy2.MorphAnalyzer()

        # –õ–µ–º–º–∞—Ç–∏–∑–∏—Ä—É–µ–º —Å–ª–æ–≤–∞ –∏ –∏—â–µ–º –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞
        keywords = []
        for word in symptoms.split(","):
            parsed_word = morph.parse(word.strip())[0]
            if "NOUN" in parsed_word.tag:
                keywords.append(parsed_word.normal_form)

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–∏–∞–≥–Ω–æ–∑ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
        diagnosis = ""
        if "–≥–æ–ª–æ–≤–Ω–∞—è –±–æ–ª—å" in keywords:
            diagnosis = "–º–∏–≥—Ä–µ–Ω—å"
        elif "–Ω–∞—Å–º–æ—Ä–∫" in keywords:
            diagnosis = "–û–†–í–ò"

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –¥–∏–∞–≥–Ω–æ–∑–æ–º –∏ —Å—Å—ã–ª–∫–æ–π –Ω–∞ –∑–∞–ø–∏—Å—å –∫ –≤—Ä–∞—á—É
        if diagnosis:
            message = f"–í–∞—à –¥–∏–∞–≥–Ω–æ–∑: {diagnosis}. –î–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞ –ø—Ä–∏–µ–º –∫ –≤—Ä–∞—á—É –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ: https://www.gosuslugi.ru/10091/1/form"
        else:
            message = "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –º—ã –Ω–µ —Å–º–æ–≥–ª–∏ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤–∞—à –¥–∏–∞–≥–Ω–æ–∑. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ —Å–≤–æ–∏ —Å–∏–º–ø—Ç–æ–º—ã –µ—â–µ —Ä–∞–∑."

        context.bot.send_message(chat_id=chat_id, text=message)

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    updater.dispatcher.add_handler(MessageHandler(Filters.text & ~Filters.command, handle_symptoms))

# –°–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∫–Ω–æ–ø–∫–∏ "Ask Question"
def ask_question(update, context):
    chat_id = update.message.chat_id
    message = "–ó–∞–¥–∞–π—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å:"

    context.bot.send_message(chat_id=chat_id, text=message)

    # –°–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–æ–ø—Ä–æ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   def handle_message(update, context):
    text = update.message.text
    chat_id = update.message.chat_id

    if text == '–£—á—Ä–µ–∂–¥–µ–Ω–∏–µ':
        # –≤—ã–≤–æ–¥–∏–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –≥–æ—Ä–æ–¥–∞ –∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
        keyboard = [
            [InlineKeyboardButton("–ì–æ—Ä–æ–¥ 1", callback_data='city_1')],
            [InlineKeyboardButton("–ì–æ—Ä–æ–¥ 2", callback_data='city_2')],
            [InlineKeyboardButton("–ì–æ—Ä–æ–¥ 3", callback_data='city_3')]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        context.bot.send_message(chat_id=chat_id, text='–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥:', reply_markup=reply_markup)

    elif text == '–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏':
        # –≤—ã–≤–æ–¥–∏–º —Å–ø–∏—Å–æ–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
        employees = [
            {'name': '–°–≤–µ—Ç–ª–∞–Ω–∞ –°–ª–µ–ø–æ–≤–∞ –ò–æ—Å–∏—Ñ–æ–≤–Ω–∞', 'position': '–ó–∞–≤–µ–¥—É—é—â–∏–π', 'phone': '8 888 888 88 88', 'email': '7zxc.email@mail.ru', 'city': '–û—Ä—Å–∫', 'branch': '–î–Ω–µ–≤–Ω–æ–π —Å—Ç–∞—Ü–∏–æ–Ω–∞—Ä', 'address': '–û—Ä–µ–Ω–±—É—Ä–≥—Å–∫–∞—è –û–±–ª–∞—Å—Ç—å, –≥. –û—Ä—Å–∫, —É–ª. –°—Ç–∞–Ω–∏—Å–ª–∞–≤—Å–∫–æ–≥–æ, 1–ê', 'additional_info': '–Ω–µ—Ç'},
            {'name': '–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á –ò–≤–∞–Ω–æ–≤', 'position': '–í—Ä–∞—á', 'phone': '8 999 999 99 99', 'email': 'ivan.ivanov@mail.ru', 'city': '–û—Ä—Å–∫', 'branch': '–î–Ω–µ–≤–Ω–æ–π —Å—Ç–∞—Ü–∏–æ–Ω–∞—Ä', 'address': '–û—Ä–µ–Ω–±—É—Ä–≥—Å–∫–∞—è –û–±–ª–∞—Å—Ç—å, –≥. –û—Ä—Å–∫, —É–ª. –°—Ç–∞–Ω–∏—Å–ª–∞–≤—Å–∫–æ–≥–æ, 1–ê', 'additional_info': '–Ω–µ—Ç'},
            {'name': '–ü–µ—Ç—Ä –ü–µ—Ç—Ä–æ–≤–∏—á –ü–µ—Ç—Ä–æ–≤', 'position': '–ú–µ–¥—Å–µ—Å—Ç—Ä–∞', 'phone': '8 777 777 77 77', 'email': 'petr.petrov@mail.ru', 'city': '–û—Ä—Å–∫', 'branch': '–î–Ω–µ–≤–Ω–æ–π —Å—Ç–∞—Ü–∏–æ–Ω–∞—Ä', 'address': '–û—Ä–µ–Ω–±—É—Ä–≥—Å–∫–∞—è –û–±–ª–∞—Å—Ç—å, –≥. –û—Ä—Å–∫, —É–ª. –°—Ç–∞–Ω–∏—Å–ª–∞–≤—Å–∫–æ–≥–æ, 1–ê', 'additional_info': '–Ω–µ—Ç'}
        ]
        for employee in employees:
            message = f"–§–ò–û: {employee['name']}n–î–æ–ª–∂–Ω–æ—Å—Ç—å: {employee['position']}n–¢–µ–ª–µ—Ñ–æ–Ω: {employee['phone']}nE-mail: {employee['email']}n–ì–æ—Ä–æ–¥: {employee['city']}n–§–∏–ª–∏–∞–ª: {employee['branch']}n–ê–¥—Ä–µ—Å: {employee['address']}n–î–æ–ø. –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: {employee['additional_info']}"
            context.bot.send_message(chat_id=chat_id, text=message)

    elif text == '–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è':
        # –≤—ã–≤–æ–¥–∏–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± —É—á—Ä–µ–∂–¥–µ–Ω–∏–∏
        message = "üìû –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è üìûn‚Ä¢ –ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —É—á—Ä–µ–∂–¥–µ–Ω–∏—è: –ì–ê–£–ó '–ì–ë' –ì. –û—Ä—Å–∫–∞n‚Ä¢ –°–æ–∫—Ä–∞—â–µ–Ω–Ω–æ–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —É—á—Ä–µ–∂–¥–µ–Ω–∏—è: –ì–ê–£–ó '–ì–ë' –ì. –û–†–°–ö–ên‚Ä¢ –ö–æ–¥—ã —É—á—Ä–µ–∂–¥–µ–Ω–∏—è: –ò–ù–ù 5614088133, –ö–ü–ü 561401001, –û–ö–ü–û 70022434, –û–ì–†–ù 1225600012440n‚Ä¢ –ü—É–±–ª–∏—á–Ω–æ-–ø—Ä–∞–≤–æ–≤–æ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ: –û—Ä–µ–Ω–±—É—Ä–≥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å, –û–ö–ê–¢–û 53 000 000 000, –û–ö–¢–ú–û 53723000n‚Ä¢ –û—Ä–≥–∞–Ω—ã, –æ—Å—É—â–µ—Å—Ç–≤–ª—è—é—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–ø–æ–ª–Ω–æ–º–æ—á–∏—è —É—á—Ä–µ–¥–∏—Ç–µ–ª—è: –ú–∏–Ω–∏—Å—Ç–µ—Ä—Å—Ç–≤–æ –∑–¥—Ä–∞–≤–æ–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –û—Ä–µ–Ω–±—É—Ä–≥—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏n‚Ä¢ –¢–∏–ø —É—á—Ä–µ–∂–¥–µ–Ω–∏—è: –ê–≤—Ç–æ–Ω–æ–º–Ω–æ–µ —É—á—Ä–µ–∂–¥–µ–Ω–∏–µn‚Ä¢ –í–∏–¥ —É—á—Ä–µ–∂–¥–µ–Ω–∏—è: –ë–æ–ª—å–Ω–∏—Ü–∞ –≥–æ—Ä–æ–¥—Å–∫–∞—èn‚Ä¢ –†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å: –ì–ª–∞–≤–Ω—ã–π –≤—Ä–∞—á: –û—Ä–ª–æ–≤ –ü–∞–≤–µ–ª –í–ª–∞–¥–∏–º–∏—Ä–æ–≤–∏—án‚Ä¢ –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω: +7 353 720 67 67n‚Ä¢ –°–∞–π—Ç —É—á—Ä–µ–∂–¥–µ–Ω–∏—è: http://orskgb.nitoich.tw1.ru/n‚Ä¢ –ê–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã: syntez-ref@mail.ru"
        context.bot.send_message(chat_id=chat_id, text=message)

    else:
        # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª —á—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–µ, –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        context.bot.send_message(chat_id=chat_id, text='–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞')
  
 
def support(update, context):
    # Get the user's chat ID
    chat_id = update.message.chat_id
    
    # Send a message to the user
    context.bot.send_message(chat_id=chat_id, text="–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å:")
    
    # Add the user's question to the database
    conn = sqlite3.connect('questions.db')
    c = conn.cursor()
    c.execute("INSERT INTO questions (chat_id) VALUES (?)", (chat_id,))
    conn.commit()
    conn.close()




def add_question(update, context):
    # Get the user's chat ID and question
    chat_id = update.message.chat_id
    question = update.message.text
    
    # Update the database with the user's question
    conn = sqlite3.connect('questions.db')
    c = conn.cursor()
    c.execute("UPDATE questions SET question=? WHERE chat_id=?", (question, chat_id))
    conn.commit()
    conn.close()
    
    # Send a message to the user confirming their question has been received
    context.bot.send_message(chat_id=chat_id, text="–í–∞—à –≤–æ–ø—Ä–æ—Å –±—ã–ª –ø–æ–ª—É—á–µ–Ω. –ú—ã –æ—Ç–≤–µ—Ç–∏–º –≤–∞–º –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.")



def view_questions(update, context):
    # Get the user's chat ID
    chat_id = update.message.chat_id
    
    # Check if the user is an administrator
    if chat_id == ADMIN_CHAT_ID:
        # Get all the questions from the database
        conn = sqlite3.connect('questions.db')
        c = conn.cursor()
        c.execute("SELECT chat_id, question FROM questions")
        questions = c.fetchall()
        conn.close()
        
        # Send a message to the administrator with the questions
        message = "–°–ø–∏—Å–æ–∫ –≤–æ–ø—Ä–æ—Å–æ–≤:n"
        for q in questions:
            message += f"Chat ID: {q[0]}, –í–æ–ø—Ä–æ—Å: {q[1]}n"
        context.bot.send_message(chat_id=chat_id, text=message)
    else:
        # Send a message to the user that they are not authorized to view the questions
        context.bot.send_message(chat_id=chat_id, text="–í—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤–æ–ø—Ä–æ—Å–æ–≤.")




def main():
    # Create the updater and dispatcher
    updater = Updater(TOKEN, use_context=True)
    dispatcher = updater.dispatcher
    
    # Add the support button to the menu
    keyboard = [[InlineKeyboardButton("–û–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É", callback_data='support')]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    dispatcher.add_handler(CommandHandler('start', start))
    dispatcher.add_handler(CallbackQueryHandler(button))
    
    # Add the handlers for the support functionality
    dispatcher.add_handler(CommandHandler('support', support))
    dispatcher.add_handler(MessageHandler(Filters.text, add_question))
    dispatcher.add_handler(CommandHandler('view_questions', view_questions))
    
    # Start the bot
    updater.start_polling()
    updater.idle()
  
  
  def help(update, context):
    # Get the user's chat ID
    chat_id = update.message.chat_id
    
    # Send a message to the user with the help information
    message = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –±–æ—Ç!nn"
    message += "–ß—Ç–æ–±—ã –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º, –≤—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –ø—É–Ω–∫—Ç –º–µ–Ω—é.nn"
    message += "–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–û–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É'.nn"
    message += "–°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞!"
    context.bot.send_message(chat_id=chat_id, text=message)


3. Finally, you need to add the "–ü–æ–º–æ—â—å" button to your bot's menu:

def main():
    # Create the updater and dispatcher
    updater = Updater(TOKEN, use_context=True)
    dispatcher = updater.dispatcher
    
    # Add the help button to the menu
    keyboard = [[InlineKeyboardButton("–ü–æ–º–æ—â—å", callback_data='help')]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    dispatcher.add_handler(CommandHandler('start', start))
    dispatcher.add_handler(CallbackQueryHandler(button))
    
    # Add the handler for the help functionality
    dispatcher.add_handler(CommandHandler('help', help))
    
    # Start the bot
    updater.start_polling()
    updater.idle()
  
  
# –°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞–∑–º–µ—Ç–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫
menu_markup = InlineKeyboardMarkup([[button1], [button2], [button3], [button4], [button5], [button6]])

# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–Ω–æ–ø–∫–∞–º–∏ –º–µ–Ω—é
update.message.reply_text('–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', reply_markup=menu_markup)
